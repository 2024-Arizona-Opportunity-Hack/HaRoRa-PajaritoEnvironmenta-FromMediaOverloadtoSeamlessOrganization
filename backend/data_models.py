import dataclasses
from typing import Optional, List


@dataclasses.dataclass
class ImageDetail:
    url: str  # primary key
    user_id: str  # primary key of the user that added this Imagein table
    thumbnail_url: str
    title: str | None
    caption: str | None
    tags: str | None
    coordinates: List[float] | None
    capture_time: str | None  # dd/mm/yyyy
    extended_meta: str | None
    season: str | None


@dataclasses.dataclass
class ImageDetailIn(ImageDetail):
    embedding_vector: List[float]


@dataclasses.dataclass
class ImageDetailResult(ImageDetail):
    uuid: str  # sub = user_id = primary key?
    updated_at: str
    created_at: str


@dataclasses.dataclass
class User:
    user_id: str  # dropbox account
    user_name: str  # dropbox username
    email: str  # dropbox email
    access_token: str  # dropbox access token for the user for current app
    refresh_token: str  # dropbox refresh token once access token expires
    template_id: str  # dropbox properties template
    cursor: Optional[str] = None
    initials: Optional[str] = None


@dataclasses.dataclass
class FileQueue:
    tmp_file_loc: str  # temp file location on disk
    tag_list: str  # comma separated tags
    access_token: str  # user access_token
    user_id: str  # user id
    image_id: str  # image_id in db
    batch_id: str | None = None  # updated once we submit the file to openai batch job
    is_saved_to_db: bool = False  # whether saved the final image object to DB
    is_cleaned_from_disk: bool = False  # whether the image is removed from tmp file loc on disk
    created_at: int | None = None  # generated by pg
    updated_at: int | None = None  # generated by pg


@dataclasses.dataclass
class BatchQueue:
    batch_id: str  # openai batch job id
    input_file_id: str  # openai storage input prompts file id. used for cleaning later
    batch_jsonl_filepath: str  # filepath for input jsonl file on disk
    batch_metadata_filepath: str  # filepath for metadata about files in jsonl on disk
    status: str = "submitted"  # status of batch job on openai. basically enum, but using string
    output_file_id: str | None = None  # once the job is complete, i will get outputfile id
    are_all_files_updated_in_db: bool = False  # once the job is complete, another thread will read in files and then do further processing, before pushing to db. Once all files from the batch are pushed to db, this will be set to true
    are_files_deleted_from_oai_storage: bool = False  # once all files are updated in DB, we are free to delete these files from openai storage, and post deleteion this will be set to true
    is_cleaned_from_disk: bool = False  # whether the batch_files are removed from tmp file loc on disk
    created_at: int | None = None  # generated by pg
    updated_at: int | None = None  # generated by pg
